<project>
  <groupId>org.example</groupId>
  <artifactId>lastbus</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <name>Lastbus</name>
  <packaging>jar</packaging>
  <version>1.0</version>
  <properties>
    <spark.version>1.6.0</spark.version>
    <maven.properties.version>1.0-alpha-2</maven.properties.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <java.version>1.8</java.version>
    <scala.binary.version>2.10</scala.binary.version>
    <scala.version>2.10.5</scala.version>
    <scala.version.tools>${scala.version}</scala.version.tools>

    <!-- plugin versions -->
    <maven-exec-plugin.version>1.4.0</maven-exec-plugin.version>
    <maven-surefire-plugin.version>2.19</maven-surefire-plugin.version>
    <!--
     artifact versions
    -->
    <avro.version>1.7.4</avro.version>
    <bigtop.version>0.7.0</bigtop.version>
    <commons-codec.version>1.4</commons-codec.version>
    <commons-digester.version>1.8</commons-digester.version>
    <commons-configuration.version>1.6</commons-configuration.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-compress.version>1.4.1</commons-compress.version>
    <commons-logging.version>1.1.3</commons-logging.version>
    <commons-io.version>2.4</commons-io.version>
    <curator.version>2.7.1</curator.version>
    <easymock.version>3.1</easymock.version>
    <guava.version>11.0.2</guava.version>
    <gson.version>2.2.2</gson.version>
    <guice.version>3.0</guice.version>

    <jackson.version>1.9.13</jackson.version>
    <jcommander.version>1.30</jcommander.version>

    <jetty.version>6.1.26</jetty.version>
    <jersey.version>1.9</jersey.version>
    <servlet-api.version>2.5</servlet-api.version>
    <jsr311-api.version>1.1.1</jsr311-api.version>
    <jaxb-api.version>2.2.7</jaxb-api.version>
    <jsp.version>2.1</jsp.version>
    <jsch.version>0.1.51</jsch.version>
    <junit.version>4.11</junit.version>
    <log4j.version>1.2.17</log4j.version>
    <metrics.version>3.0.1</metrics.version>
    <mockito.version>1.8.5</mockito.version>

    <!-- ProtocolBuffer version, used to verify the protoc version and -->
    <!-- define the protobuf JAR version                               -->
    <protobuf.version>2.5.0</protobuf.version>

    <slf4j.version>1.7.5</slf4j.version>
    <snakeyaml.version>1.16</snakeyaml.version>
    <storm.version>0.9.3</storm.version>
    <stringtemplate.version>2.4.1</stringtemplate.version>
    <zookeeper.version>3.4.6</zookeeper.version>

    <maven.version.range>[3.0.0,)</maven.version.range>

    <!--  Plugin versions    -->
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <maven.cobertura.version>2.5.2</maven.cobertura.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-doxia-module-markdown.version>1.4</maven-doxia-module-markdown.version>
    <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
    <maven-exec-plugin.version>1.2.1</maven-exec-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
    <maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
    <maven-groovydoc-plugin.version>1.3</maven-groovydoc-plugin.version>
    <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
    <maven.javadoc.version>2.10.1</maven.javadoc.version>
    <maven.license.version>1.8</maven.license.version>
    <maven.project.version>2.4</maven.project.version>
    <maven.properties.version>1.0-alpha-2</maven.properties.version>
    <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
    <maven-release-plugin.version>2.5.1</maven-release-plugin.version>
    <maven-remote-resources-plugin.version>1.5</maven-remote-resources-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-rpm-plugin.version>2.1-alpha-4</maven-rpm-plugin.version>
    <maven-site-plugin.version>3.4</maven-site-plugin.version>
    <maven-source-plugin.version>2.3</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>${maven-surefire-plugin.version}</maven-surefire-report-plugin.version>
    <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>
    <maven-verifier-plugin.version>1.0</maven-verifier-plugin.version>
    <apache-rat-plugin.version>0.11</apache-rat-plugin.version>
    <wagon-maven-plugin.version>1.0</wagon-maven-plugin.version>

    <!-- build options-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <build.dependency.fail.on.warning>true</build.dependency.fail.on.warning>
    <build.redirect.test.output.to.file>false</build.redirect.test.output.to.file>

    <!-- github options-->
    <github.global.server>github</github.global.server>
    <github.site.plugin.version>0.8</github.site.plugin.version>
    <maven-site-plugin.skipDeploy>true</maven-site-plugin.skipDeploy>
    <github.downloads.plugin.version>0.6</github.downloads.plugin.version>

  </properties>

  <!--
  
    <repositories>
      <repository>
        <id>Spark Staging Repo</id>
        <url>https://repository.apache.org/content/repositories/orgapachespark-1075/</url>
      </repository>
    </repositories>
  -->

  <dependencies>
    <dependency>
      <groupId>com.google.gdata</groupId>
      <artifactId>core</artifactId>
      <version>1.47.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-oauth2</artifactId>
      <version>v2-rev87-1.19.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-drive</artifactId>
      <version>v2-rev161-1.19.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson</artifactId>
      <version>1.19.0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <!--jersey stuff -->
    <dependency>
      <groupId>org.glassfish.jersey.security</groupId>
      <artifactId>oauth1-client</artifactId>
      <version>2.22.1</version>
    </dependency>


    <!-- ======================================================== -->
    <!-- Jersey and webapp support -->
    <!-- ======================================================== -->

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
      <version>${jsr311-api.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>${jaxb-api.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client</artifactId>
      <version>${jersey.version}</version>
    </dependency>


  </dependencies>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerId>groovy-eclipse-compiler</compilerId>
            <source>${project.java.src.version}</source>
            <target>${project.java.src.version}</target>
            <!-- set verbose to be true if you want lots of uninteresting messages -->
            <!-- <verbose>true</verbose> -->
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <!--
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
-->
    <plugins>
      <!--read in a build.properties file if defined-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${maven.properties.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
              <files>
                <file>build.properties</file>
                <file>../build.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[${project.java.src.version},)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <inherited>true</inherited>
        <configuration>
          <!-- skip test resource configuration-->
          <excludes>
            <exclude>**/slider-test.xml</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--read in a build.properties file if defined-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${maven.properties.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
              <files>
                <file>build.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- Enable surefire and scalatest in all children, in one place: -->
      <!-- keep maven-failsafe-plugin version in sync -->
      <!-- Surefire runs all Java tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <!-- Note config is repeated in scalatest config -->
        <configuration>
          <skipTests>true</skipTests>
          <includes>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*TestCase.java</include>
            <include>**/*Suite.java</include>
          </includes>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>

          <systemProperties>
            <java.awt.headless>true</java.awt.headless>
            <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>
            <spark.ui.enabled>false</spark.ui.enabled>
            <spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>
            <spark.unsafe.exceptionOnMemoryLeak>true</spark.unsafe.exceptionOnMemoryLeak>
          </systemProperties>
          <failIfNoTests>false</failIfNoTests>
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>

    </plugins>
  </build>
</project>
